/* 

--- 01. TYPOGRAPHY SYSTEM

FONT SIZE SYSTEM (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

**** Font weights:
Default: 400
400
600
800
900



**** Line heights:
Default: 1
1.05
1.6

--- 02 COLOURS

MAIN COLOR: #e67e22

TINTS:
#fdf2e9
SHADES:
#cf711f
ACCENTS:
GREYS: 
#555
#333

--- 03. IMAGES

--- 04. ICONS

--- 05. SHADOWS

--- 06. BORDER-RADIUS
Default: 9px

--- 07. WHITESPACE
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128

*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  /* If we use the following font-size of 10 px for rem, this value will be applied across all fonts on the website. */

  /* font-size: 10px; */

  /* 
  The solution with font-size: 10px has its drawbacks. Some people may had to change their default web browser font size for accessibility reasons. Also, be aware that different web browsers have different default values. In this case it is best to scale the default rem using %, not px. What if their default font size is 20px not 10?
  Instead of using a fixed value like 10px, we can use 62.5%. That will apply our scaling to their default font size.
  10 px / 16 px = 0.625
  0.625 * 100 = 62.5 %
  */
  font-size: 62.5%;
}

body {
  font-family: "Noto Sans KR", sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

/*******************************/
/* General reusable components */
/*******************************/

.heading-primary {
  font-size: 5.2rem;
  font-weight: 800;
  line-height: 1.05;
  color: #333;
  /* We're not going to scale up or down the letter spacing. On top of that it is insignificant. Therefore we use the px value. */
  letter-spacing: -0.5px;
  margin-bottom: 3.2rem;
}

.btn:link,
.btn:visited {
  display: inline-block;
  color: #fff;
  padding: 1.6rem 3.2rem;
  border-radius: 9px;
  font-size: 2rem;
  text-decoration: none;
  font-weight: 600;
  /* Because this CSS rule is for any .btn class, we can add animation to all of our buttons so that when we hover over a button there is going to be a nice transition between the "original" state and the active and hover state. */

  transition: all 500ms;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: transparent;

  /* Trick to add border within the width and height of a button */
  box-shadow: inset 0 0 0 3px #fff;
}

.margin-right-sm {
  /* To ensure no other margin applies to the element, set the value to !important so it overwrites any style (it has the highest priority).*/
  margin-right: 1.6rem !important;
}

/*******************************/
/* Website Header */
/*******************************/
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 4.8rem;
  background-color: #fdf2e9;
  /* Because we want the header to be sticky later. */
  height: 9.6rem;
}
.logo {
  height: 2.2rem;
}

/*******************************/
/* NAVIGATION */
/*******************************/

.main-nav-list {
  list-style: none;
  display: flex;
  gap: 4.8rem;
  align-items: center;
}

.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: #333;
  font-size: 1.7rem;
  font-weight: 600;
  transition: all 0.3s;
}
.main-nav-link:active,
.main-nav-link:hover {
  color: #cf711f;
}

/* Joining classes together makes the selector more specific (without using a spacebar between).
Check the Selector specifity of the following element by hovering over the selector. */
.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  padding: 1.2rem 2.4rem;
  background-color: #e67e22;
  border-radius: 9px;
  color: #fff;
}

.main-nav-link.nav-cta:active,
.main-nav-link.nav-cta:hover {
  background: #cf711f;
}

/*******************************/
/* Hero Section */
/*******************************/

.section-hero {
  background-color: #fdf2e9;
  padding: 4.8rem 3.2rem 9.6rem 3.2rem;
}

.hero {
  max-width: 130rem;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  column-gap: 9.6rem;
}

.hero-img {
  width: 100%;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.delivered-meals {
  display: flex;
  margin-top: 8rem;
  align-items: center;
  gap: 2.4rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-text span {
  color: #cf711f;
  font-weight: 900;
}

/*******************************/
/* HOW IT WORKS SECTION */
/*******************************/

.section-how {
  padding: 9.6px 0;
  background-color: orangered;
}

.section-how div:nth-child(1) {
  background-color: yellow;
}
.section-how div:nth-child(2) {
  background-color: blue;
}
.section-how div:nth-child(3) {
  background-color: green;
}
.section-how div:nth-child(4) {
  background-color: violet;
}

/* 
.test {
  background-color: red;
  padding: 100px;
  width: 1000px;

  If we use the max-width property, the child element (.test div) adopts the same width as the parent element (body) in case
  we make the viewport smaller than its max-width value. If the size of the viewport is smaller than the actual value of the max-width (in this case less than 1000 px) then the element will adapt 100% width of the viewport.
  
  If we have used the % value instead of px, the element will constantly adapt its size in relation to the viewport, not to its parent element.
  max-width: 1000px;

  
  REM stands for Root Element Font-size. 
  By default 1 REM is equal to 16px. As you possibly are aware, we change the size of REM on the HTML element to 62.5%.
  Why use REM for font sizes? Well, it is powerful for creating reponsive website layouts. By using rem and changing its default size, we can change the size of the whole layout (if we use the rem scaling value for width, height and size properties).
 
  font-size: 3rem;
} */
